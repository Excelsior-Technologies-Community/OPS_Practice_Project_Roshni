@model List<UserModel>

@{
    ViewData["Title"] = "Admin Chat";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .chat-message.admin {
        text-align: right;
        background-color: white;
        padding: 5px;
        border-radius: 5px;
    }

    .chat-message.user {
        text-align: left;
        background-color: white;
        padding: 5px;
        border-radius: 5px;
    }

    .user-list {
        height: 500px;
        overflow-y: auto;
        border-right: 1px solid #ddd;
    }

    .chat-area {
        height: 400px;
        overflow-y: auto;
        padding: 10px;
    }

    .user-item {
        cursor: pointer;
        padding: 10px;
        border-bottom: 1px solid #eee;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

        .user-item:hover {
            background-color: #f1f1f1;
        }

    .notification-badge {
        background-color: red;
        color: white;
        font-size: 12px;
        border-radius: 50%;
        width: 18px;
        height: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
    }

    .notification-icon {
        width: 20px;
        height: 20px;
        display: none; /* Hidden by default */
    }



    
</style>

<div class="container mt-5">
    <div class="row">
        <!-- User List -->
        <div class="col-md-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">Users</div>
                <div class="card-body user-list" id="user-list">
                  @foreach (var user in Model)
                  {
                            <div class="user-item mb-2 p-2 border rounded d-flex align-items-center justify-content-between" data-userid="@user.Id" id="user-@user.Id" onclick="openChat(@user.Id)">
                                <!-- User Profile (Left Side) -->
                                <div class="d-flex align-items-center">
                                    <img src="@user.ProfileImage" width="30" height="30" class="rounded-circle me-2" />
                                    <strong>@user.UserName</strong> <small>(ID: @user.Id)</small>
                                </div>

                                <!-- Notification Badge (Right Side) -->
                                <span class="notification-badge" id="notify-@user.Id" style="display: none;">●</span>
                                <!-- Notification Image (Right Side) -->
                                <img src="~/assets/images/widgets/project2.jpg" id="notify-@user.Id" class="notification-icon" style="display: none; width: 20px; height: 20px;" />

                            </div>
                  }


                    
                </div>
            </div>
        </div>

        <!-- Chat Box -->
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-danger text-white">Live Chat <span id="chat-with"></span></div>
                <div class="card-body chat-area" id="chat-box"></div>
                <div class="card-footer">
                    <div class="input-group">
                        <input type="text" id="message-input" class="form-control" placeholder="Type your message..." disabled />
                        <button class="btn btn-danger" id="send-btn" disabled>Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    var adminId = 4;
    var selectedUserId = null;

    connection.on("ReceiveMessage", function (senderId, message, isAdminReply) {
        var chatBox = document.getElementById("chat-messages");
        var msgClass = isAdminReply ? "admin-message" : "user-message";
        chatBox.innerHTML += `<div class='${msgClass}'>${message}</div>`;
    });

    connection.on("ShowNotification", function (senderId) {
        if (selectedUserId !== senderId) {
            document.getElementById("notify-" + senderId).style.display = "inline-block";
            document.getElementById("notify-img-" + senderId).style.display = "inline-block";
        }
    });

    function openChat(userId) {
        selectedUserId = userId;
        document.getElementById("notify-" + userId).style.display = "none";
        document.getElementById("notify-img-" + userId).style.display = "none";
        loadChat(userId);
    }

    function sendMessage() {
        var msg = document.getElementById("messageInput").value;
        if (msg.trim() !== "" && selectedUserId) {
            connection.invoke("SendMessage", adminId, selectedUserId, msg, true)
                .catch(function (err) {
                    return console.error(err.toString());
                });
            document.getElementById("messageInput").value = "";
        }
    }

    connection.start().catch(err => console.error(err.toString()));


    // Handle user click and remove notification
    $(document).on('click', '.user-item', function () {
        selectedUserId = $(this).data('userid');
        $('#chat-with').html("- User ID: " + selectedUserId);
        $('#message-input').prop('disabled', false);
        $('#send-btn').prop('disabled', false);

        // Hide notification when admin selects the user
        $('#notify-' + selectedUserId).hide();

        // Load previous chat messages
        loadChat(selectedUserId);
    });


    function loadChat(userId) {
        $.ajax({
            url: '/Admin/LoadChat',
            type: 'GET',
            data: { userId: userId },
            success: function (response) {
                if (response.length > 0) {
                    $('#chat-box').empty();
                    response.forEach(function (chat) {
                        var messageClass = chat.isAdminReply ? "chat-message admin" : "chat-message user";
                        $("#chat-box").append('<div class="' + messageClass + '"><strong>' + (chat.isAdminReply ? "Admin" : "User") + ':</strong> ' + chat.message + '</div>');
                    });
                } else {
                    $("#chat-box").html('<p class="text-center">No chat history found.</p>');
                }
            },
            error: function (error) {
                console.log("Error loading chat:", error);
            }
        });
    }

    $('#send-btn').click(function () {
        var msg = $('#message-input').val();
        if (msg.trim() === "" || selectedUserId === 0) return;

        $.post('/Admin/SendAdminMessage', { userId: selectedUserId, message: msg }, function (res) {
            if (res.success) {
                connection.invoke("SendMessage", adminId, selectedUserId, msg, true, new Date().toLocaleString());
                $('#message-input').val('');
            } else {
                alert(res.message || "Message not sent");
            }
        });
    });
</script>
